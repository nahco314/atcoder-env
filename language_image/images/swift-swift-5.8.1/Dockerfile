# syntax=docker/dockerfile:1.4.1

# generated by dockerfile_gen.py

# DOCKER_BUILDKIT=1 docker build ...

FROM ubuntu:23.04

SHELL ["/bin/bash", "-c"]

RUN apt-get update

RUN apt install sudo adduser

RUN adduser runner && \
    echo '%runner ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers
USER runner

RUN sudo ln -sf /usr/share/zoneinfo/Asia/Tokyo /etc/localtime
ENV DEBIAN_FRONTEND=noninteractive DEBCONF_NONINTERACTIVE_SEEN=true

RUN sudo apt install -y wget unzip xz-utils curl

RUN sudo mkdir /judge --mode=777

WORKDIR /judge


RUN <<EOF
# 公式手順を参考にしています。
# 量が多いので, 可能であれば./setup.shなどで実行することをお勧めします。
# 手元のDocker(M1 Mac上, Ubuntu(Intel CPU)上)のubuntu:22.10環境で確認済み。

# References
# https://www.swift.org/getting-started/ 
# https://www.swift.org/download/
# https://github.com/apple/swift-docker/blob/59e3cc2532e57bb75b406bb9c589b62bd12edd5c/5.7/ubuntu/22.04/Dockerfile

sudo apt update
export DEBIAN_FRONTEND=noninteractive

# don't use apt!
sudo apt-get install -y \
    binutils \
    git \
    gnupg2 \
    libc6-dev \
    libcurl4-openssl-dev \
    libedit2 \
    libgcc-9-dev \
    libpython3.8 \
    libsqlite3-0 \
    libstdc++-9-dev \
    libxml2-dev \
    libz3-dev \
    pkg-config \
    tzdata \
    unzip \
    zlib1g-dev \
    libncurses6

# 依存packagesの公式インストール方法だが、libpython3.8がデフォルトでubuntu22ではapt repositoryに存在しない。
# aptだと一つでも存在しなかったらエラーで強制終了するため、apt-getにしている。libpython3.8の行を消してもいいかも。
# libpython3.8はなくても問題ないことを確認済み。

export SWIFT_PLATFORM=ubuntu22.04
export SWIFT_VERSION_NUMBER=5.8.1
export SWIFT_BRANCH=swift-$SWIFT_VERSION_NUMBER-release
export SWIFT_VERSION=swift-$SWIFT_VERSION_NUMBER-RELEASE
export SWIFT_WEBROOT=https://download.swift.org

# check architecture
# CPUなど低レイヤーの環境が不明のため。
set -e
ARCH_NAME="$(dpkg --print-architecture)"
url=
case "${ARCH_NAME##*-}" in
'amd64')
    OS_ARCH_SUFFIX=''
    ;;
'arm64')
    OS_ARCH_SUFFIX='-aarch64'
    ;;
*)
    echo >&2 "error: unsupported architecture: '$ARCH_NAME'"
    exit 1
    ;;
esac

export SWIFT_WEBDIR="$SWIFT_WEBROOT/$SWIFT_BRANCH/$(echo $SWIFT_PLATFORM | tr -d .)$OS_ARCH_SUFFIX"
export FILE_NAME="$SWIFT_VERSION-$SWIFT_PLATFORM$OS_ARCH_SUFFIX"
export SWIFT_BIN_URL="$SWIFT_WEBDIR/$SWIFT_VERSION/$FILE_NAME.tar.gz"

sudo apt install -y wget

wget -O - "$SWIFT_BIN_URL" | sudo tar -xzC /usr/local/                 --transform=s/$FILE_NAME/swift/

# echo 'export PATH=/usr/local/swift/usr/bin:$PATH' >>~/.bashrc

# verify swift command.
# source ~/.bashrc
export PATH=/usr/local/swift/usr/bin:$PATH
swift --version
# 正しく表示されればswiftcも使えます。

# create project
# mkdir swift
# cd swift
swift package init --name Main --type executable
cat << '_eof_' > Package.swift
// swift-tools-version: 5.8.1
import PackageDescription

let package = Package(
  name: "Main",
  dependencies: [
    .package(
      url: "https://github.com/apple/swift-collections.git",
      .upToNextMajor(from: "1.0.0") // or `.upToNextMinor
    ),
    .package(url: "https://github.com/apple/swift-algorithms.git", .upToNextMajor(from: "1.0.0"))
  ],
  targets: [
    .executableTarget(
      name: "Main",
      dependencies: [
        .product(name: "Collections", package: "swift-collections"),
        .product(name: "Algorithms", package: "swift-algorithms")
      ],
      path: "Sources"
    )
  ]
)
_eof_
# install library
swift build -Xswiftc -O -Xlinker -lm -c release
rm .build/release/Main

EOF



COPY --chmod=777 run.bash /tmp/run.bash
