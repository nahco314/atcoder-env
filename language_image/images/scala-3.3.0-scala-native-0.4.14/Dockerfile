# syntax=docker/dockerfile:1.4.1

# generated by dockerfile_gen.py

# DOCKER_BUILDKIT=1 docker build ...

FROM ubuntu:23.04

SHELL ["/bin/bash", "-c"]

RUN apt-get update

RUN apt install sudo adduser

RUN adduser runner && \
    echo '%runner ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers
USER runner

RUN sudo ln -sf /usr/share/zoneinfo/Asia/Tokyo /etc/localtime
ENV DEBIAN_FRONTEND=noninteractive DEBCONF_NONINTERACTIVE_SEEN=true

RUN sudo apt install -y wget unzip xz-utils curl

RUN sudo mkdir /judge --mode=777

WORKDIR /judge


RUN <<EOF

sudo apt-get update
sudo apt-get install -y apt-transport-https curl gnupg -yqq
echo "deb https://repo.scala-sbt.org/scalasbt/debian all main" | sudo tee /etc/apt/sources.list.d/sbt.list
echo "deb https://repo.scala-sbt.org/scalasbt/debian /" | sudo tee /etc/apt/sources.list.d/sbt_old.list
curl -sL "https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x2EE0EA64E40A89B84B2DF73499E82A75642AC823" | sudo -H gpg --no-default-keyring --keyring gnupg-ring:/etc/apt/trusted.gpg.d/scalasbt-release.gpg --import
sudo chmod 644 /etc/apt/trusted.gpg.d/scalasbt-release.gpg
sudo apt-get update
sudo apt-get install -y sbt openjdk-20-jdk-headless clang
# 以下で作成したものを保存しておいて、Compile 時に使用
mkdir main && cd main
cat << _eof_ > build.sbt
import scala.scalanative.build._

scalaVersion := "3.3.0"

enablePlugins(ScalaNativePlugin)

nativeConfig ~= {
    _.withMode(Mode.releaseFast)
}
_eof_
mkdir -p project src/main/scala
cat << _eof_ > project/plugins.sbt
addSbtPlugin("org.scala-native" % "sbt-scala-native" % "0.4.14")
_eof_
cat << _eof_ > project/build.properties
sbt.version = 1.9.2
_eof_
cat << _eof_ > src/main/scala/Main.scala
object Main {
  def main(args: Array[String]): Unit =
    println("Hello, world!")
}
_eof_
# 以下で library などがダウンロードされるので保存しておいて、Compile 時に使用
# ($HOME/ 以下の .g8/,  .ivy2/,  .cache/coursier/ に色々できるので、全て保存しておく)
sbt nativeLink
rm target/scala-3.3.0/main-out

EOF



COPY --chmod=777 run.bash /tmp/run.bash
